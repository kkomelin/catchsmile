<?php

/**
 * @file
 * Install file for Catch Smile module.
 *
 * Note from the author:
 *   I used the code of node_example.install from http://drupal.org/project/examples as an example.
 *
 */

/**
 * Implements hook_install.
 */
function catchsmile_install() {

  $t = get_t();

  $catchsmile = array(
    'type' => 'catchsmile',
    'name' => $t('CatchSmile Photo'),
    'base' => 'node_content',
    'description' => $t('This is a content type for storing CatchSmile photos.'),
    'title_label' => $t('Caption'),
    'custom' => TRUE,
  );

  // Sets the default values for a node type.
  $content_type = node_type_set_defaults($catchsmile);

  // Save the content type.
  node_type_save($content_type);

  // Create all the fields we are adding to our content type.
  foreach (_catchsmile_installed_fields() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  foreach (_catchsmile_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $catchsmile['type'];
    field_create_instance($instance);
  }
}

/**
 * Implements hook_uninstall().
 *
 * @ingroup catchsmile
 */
function catchsmile_uninstall() {
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'catchsmile'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once.
  node_delete_multiple($nids);

  // Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  foreach (array_keys(_catchsmile_installed_fields()) as $field) {
    field_delete_field($field);
  }

  // Loop over any remaining field instances attached to the catchsmile
  // content type and delete them individually.
  $instances = field_info_instances('node', 'catchsmile');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete our content type.
  node_type_delete('catchsmile');

  // Purge all field infromation.
  field_purge_batch(1000);
}

/**
 * Returns a structured array defining the fields created by this content type.
 *
 * This is factored into this function so it can be used in both
 * catchsmile_install() and catchsmile_uninstall().
 *
 * @return
 *  An associative array specifying the fields we wish to add to our
 *  new node type.
 *
 * @ingroup catchsmile
 */
function _catchsmile_installed_fields() {

  return array(
    'catchsmile_image' => array(
      'field_name' => 'catchsmile_image',
      'type'       => 'image',
      'cardinality' => 1,
    ),
  );
}

/**
 * Returns a structured array defining the instances for this content type.
 *
 *
 * This is factored into this function so it can be used in both
 * catchsmile_install() and catchsmile_uninstall().
 *
 * @return
 *  An associative array specifying the instances we wish to add to our new
 *  node type.
 *
 * @see profiles/standart/standart.install to get example of settings.
 *
 * @ingroup catchsmile
 */
function _catchsmile_installed_instances() {
  $t = get_t();
  return array(
    'catchsmile_image' => array(
      'field_name'  => 'catchsmile_image',
      'label'       => $t('Upload a photo'),
      'required'    => FALSE, // @todo: Change this after testing.
      'widget' => array(
        'type'    => 'image_image',
        'settings' => array(
          'progress_indicator' => 'throbber',
          'preview_image_style' => 'thumbnail',
        ),
        'weight' => -1,
      ),
      'settings' => array(
        'file_directory' => 'field/image',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'alt_field' => FALSE,
        'title_field' => '',
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array('image_style' => 'large', 'image_link' => ''),
          'weight' => -1,
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array('image_style' => 'medium', 'image_link' => 'content'),
          'weight' => -1,
        ),
      )
    )
  );
}
